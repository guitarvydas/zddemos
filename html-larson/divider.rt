defn divider_install (reg) {
    register_component (reg, mkTemplate (“Divider”, ϕ, ↪︎divider_instantiator))
}
                           
defobj Divider_Info () {
    • counter ⇐ 0
}
   
defn divider_instantiator (reg, owner, name, template_data) {
    name_with_id ≡ gensymbol (“divider”)
    info ≡ #fresh (Divider_Info)
    return make_leaf (name_with_id, owner, info, ↪︎divider_handler)
}

defvar DIVIDERCOUNT ⇐ 5

defn first_time (m) {
    return not is_tick (m)
}

defn divider_handler (eh, msg) {
    info ≡ eh.instance_data
    if info.counter >= DIVIDERCOUNT {
        send_string (eh, “”, “”, msg)
        info.counter ⇐ 0
    } else {
        info.counter ⇐ info.counter + 1
    }
}

